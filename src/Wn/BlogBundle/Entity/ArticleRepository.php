<?php

namespace Wn\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
	public function myFindAllOrderByDate()
	{
		$qb = $this->_em->createQueryBuilder();

		$qb->select('a')
		   ->from('WnBlogBundle:Article', 'a')
		   ->orderBy('a.dateOfPublication','DESC');

		return $qb->getQuery()
				  ->getResult();
	}

	public function findByCategory($category)
	{
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
		   ->from('WnBlogBundle:Article', 'a')
		   ->where('a.category = :category')
		    ->setParameter('category', $category)
		   ->orderBy('a.dateOfPublication','DESC');

	    return $qb->getQuery()
	              ->getResult();
	}

	public function findByAuthorAndCategory($author, $category)
	{
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
		   ->from('WnBlogBundle:Article','a')
		   ->where('a.category = :category')
		    ->setParameter('category', $category)
		   ->andWhere('a.author = :author')
		    ->setParameter('author', $author)
		   ->orderBy('a.dateOfPublication','DESC');

		return $qb->getQuery()
		          ->getResult();
	}

	public function findLastNStartAtXByCategory($valueMax, $valueStart, $category)
	{
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
		   ->from('WnBlogBundle:Article','a')
		   ->where('a.category = :category')
		    ->setParameter('category', $category)
		   ->orderBy('a.dateOfPublication','DESC')
		   ->setFirstResult($valueStart)
		   ->setMaxResults($valueMax);

		return $qb->getQuery()
		          ->getResult();
	}

	public function findForUpdateHomepage($max_result, $list_id, $category){
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
		   ->from('WnBlogBundle:Article','a')
		   ->where('a.id NOT IN (:ids)')
		    ->setParameter('ids',$list_id)
		   ->andWhere('a.category = :category')
		    ->setParameter('category', $category)
		   ->orderBy('a.dateOfPublication','DESC')
		   ->setMaxResults($max_result);

		return $qb->getQuery()
		          ->getResult();
	}
}
