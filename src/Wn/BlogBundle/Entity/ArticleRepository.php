<?php

namespace Wn\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{

	/**
	 * Used for the profile of an author
	 *
	 * @param  WnUserBundle/Entity/User     $author
	 * @param  WnBlogBundle/Entity/Category $category
	 * @return result
	 */
	public function findByAuthorAndCategory($author, $category)
	{
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
		   ->from('WnBlogBundle:Article','a')
		   ->where('a.category = :category')
		    ->setParameter('category', $category)
		   ->andWhere('a.author = :author')
		    ->setParameter('author', $author)
		   ->orderBy('a.dateOfPublication','DESC');

		return $qb->getQuery()
		          ->getResult();
	}

	/**
	 * find N articles by his category and not display in the homepage
	 * used for adding articles in the homepage 
	 *
	 * @param  integer                        $max_result 
	 * @param  array<interger>                $list_id
	 * @param  WnBlogBundle/Entity/Category   $category
	 * @return result
	 */
	public function findForUpdateHomepage($max_result, $list_id, $category){
		$qb = $this->_em->createQueryBuilder();
		$qb->select('a')
		   ->from('WnBlogBundle:Article','a')
		   ->where('a.id NOT IN (:ids)')
		    ->setParameter('ids',$list_id)
		   ->andWhere('a.category = :category')
		    ->setParameter('category', $category)
		   ->orderBy('a.dateOfPublication','DESC')
		   ->setMaxResults($max_result);

		return $qb->getQuery()
		          ->getResult();
	}
}
